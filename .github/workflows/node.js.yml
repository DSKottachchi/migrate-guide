# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

# Set environment variables
env:
  NODE_ENV: ${{ secrets.NODE_ENV }}
  PORT: ${{ secrets.PORT }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
  VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}

jobs:
  build-client:
    runs-on: self-hosted
    name: Build Client
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install client dependencies
      run: |
        cd client
        npm install
        export VITE_CLERK_PUBLISHABLE_KEY=$VITE_CLERK_PUBLISHABLE_KEY
    - name: Build client
      run: |
        cd client
        npm run build


  build-server:
    runs-on: self-hosted
    name: Build Server
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install server dependencies
      run: |
        npm install
        export NODE_ENV=$NODE_ENV
        export PORT=$PORT
        export MONGO_URI=$MONGO_URI
        export JWT_SECRET=$JWT_SECRET
        export BUCKET_NAME=$BUCKET_NAME
        export BUCKET_REGION=$BUCKET_REGION
        export ACCESS_KEY=$ACCESS_KEY
        export SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY

    - name: Run server
      run: npm run build --if-present

    - name: Stop server
      run: kill $(cat server.pid)

    - name: Restart server
      run: sudo pm2 restart backend
